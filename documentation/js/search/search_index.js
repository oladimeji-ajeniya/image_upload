var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.338,1,1.871]],["body/controllers/AppController.html",[0,2.102,1,2.94,2,1.676,3,0.567,4,0.495,5,0.495,6,3.114,7,0.567,8,1.55,9,4.473,10,2.345,11,0.039,12,1.117,13,3.782,14,1.236,15,1.264,16,0.911,17,0.726,18,2.553,19,3.114,20,0.567,21,0.426,22,3.114,23,2.673,24,1.367,25,3.782,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.091,29,1.871]],["body/modules/AppModule.html",[1,2.661,2,1.637,3,0.39,4,0.34,5,0.34,11,0.039,16,1.052,17,0.5,18,2.525,19,2.142,20,0.39,21,0.293,26,0.024,27,0.024,28,1.551,29,3.518,30,1.153,31,1.432,32,1.839,33,1.839,34,1.432,35,2.661,36,1.613,37,2.142,38,2.142,39,2.142,40,2.821,41,2.821,42,2.821,43,2.61,44,1.839,45,1.839,46,2.602,47,2.61,48,2.602,49,2.142,50,2.602,51,2.602,52,2.602,53,2.142,54,1.613,55,2.602,56,1.432,57,2.602,58,2.289,59,2.602,60,1.839,61,2.602,62,2.602,63,1.613,64,2.142,65,1.432,66,2.142,67,1.432,68,2.142,69,1.613,70,2.142,71,1.613,72,2.142,73,1.282,74,2.142,75,2.602,76,2.289,77,2.602,78,1.839,79,2.602,80,2.602,81,2.142,82,2.142,83,2.602]],["title/injectables/AppService.html",[18,1.487,84,0.58]],["body/injectables/AppService.html",[3,0.596,4,0.52,5,0.52,7,0.596,8,1.598,9,4.552,11,0.039,12,1.173,14,1.298,15,1.303,16,0.763,17,0.763,18,2.409,20,0.596,21,0.447,24,1.436,26,0.032,27,0.032,84,0.939,85,1.589,86,3.271,87,3.973,88,3.973,89,3.973]],["title/injectables/CacheService.html",[84,0.58,90,2.133]],["body/injectables/CacheService.html",[3,0.429,4,0.374,5,0.374,7,0.429,8,1.289,11,0.039,12,1.438,14,1.476,15,1.491,16,0.549,17,0.549,20,0.429,21,0.322,24,1.033,26,0.026,27,0.026,84,0.757,85,1.143,90,2.788,91,2.354,92,1.426,93,2.225,94,4.516,95,2.238,96,3.945,97,3.945,98,3.945,99,2.859,100,2.001,101,2.001,102,1.297,103,1.806,104,3.718,105,3.274,106,3.945,107,2.859,108,3.945,109,3.167,110,2.859,111,4.869,112,2.354,113,1.748,114,2.859,115,2.859,116,2.859,117,2.859]],["title/injectables/CustomLogger.html",[58,1.871,84,0.58]],["body/injectables/CustomLogger.html",[3,0.332,4,0.289,5,0.289,7,0.332,8,1.072,11,0.039,12,1.43,14,1.583,15,1.555,16,0.63,17,0.424,20,0.332,21,0.249,26,0.021,27,0.021,58,2.034,60,3.545,82,2.701,84,0.63,85,0.884,93,1.927,100,2.147,101,2.147,102,1.291,103,1.937,113,0.98,118,4.128,119,1.82,120,3.281,121,2.034,122,3.281,123,3.281,124,3.281,125,3.281,126,3.281,127,2.211,128,3.84,129,5.014,130,3.281,131,4.844,132,2.211,133,2.211,134,3.281,135,2.211,136,3.281,137,2.211,138,3.281,139,2.211,140,3.281,141,2.211,142,3.281,143,2.211,144,1.217,145,3.281,146,2.211,147,2.211,148,2.211,149,3.912,150,1.37,151,3.281,152,2.211,153,2.211,154,2.211,155,2.211,156,2.211,157,2.211,158,2.211,159,2.211]],["title/interfaces/DatabaseConfig.html",[160,1.661,161,1.661]],["body/interfaces/DatabaseConfig.html",[3,0.53,4,0.462,5,0.462,7,0.53,11,0.038,15,1.521,20,0.682,26,0.029,27,0.029,63,2.192,65,1.946,67,1.946,69,2.192,71,2.192,73,1.742,92,1.642,102,1.338,160,2.501,161,2.501,162,2.499,163,2.499,164,3.747,165,2.918,166,2.918,167,3.65,168,2.192,169,2.911]],["title/interfaces/DatabaseConfigAttributes.html",[160,1.661,167,1.871]],["body/interfaces/DatabaseConfigAttributes.html",[3,0.447,4,0.389,5,0.389,7,0.447,11,0.038,15,1.607,20,0.608,26,0.026,27,0.026,63,3.07,65,2.726,67,2.726,69,3.07,71,3.07,73,2.44,92,1.466,102,1.458,103,2.352,160,2.232,161,1.639,162,2.104,163,2.104,164,2.104,165,1.639,166,1.639,167,3.212,168,2.859,169,4.077]],["title/modules/DatabaseModule.html",[28,1.091,40,1.661]],["body/modules/DatabaseModule.html",[3,0.622,4,0.542,5,0.542,11,0.039,16,0.963,17,0.796,20,0.622,21,0.467,26,0.032,27,0.032,28,1.813,30,1.836,35,2.569,36,2.569,40,2.762,170,4.143,171,3.815,172,4.143]],["title/controllers/HealthController.html",[0,1.338,173,1.871]],["body/controllers/HealthController.html",[0,0.85,2,0.85,3,0.288,4,0.251,5,0.251,7,0.288,8,0.963,10,1.189,11,0.039,12,0.566,14,0.963,16,0.566,17,0.368,20,0.288,21,0.404,24,1.455,26,0.028,27,0.019,73,2.354,93,1.984,95,1.435,105,2.224,173,2.496,174,1.578,175,1.578,176,5.057,177,1.189,178,4.027,179,4.027,180,4.027,181,4.778,182,4.931,183,4.588,184,5.33,185,1.917,186,3.933,187,3.577,188,4.163,189,2.536,190,3.588,191,4.588,192,3.588,193,3.588,194,3.588,195,2.954,196,3.588,197,4.345,198,4.345,199,3.588,200,3.588,201,3.588,202,1.355,203,2.946,204,2.426,205,2.946,206,2.946,207,2.946,208,2.946,209,2.946,210,1.355,211,1.917,212,1.355,213,1.917,214,1.917,215,1.917,216,4.027,217,4.027,218,4.027,219,1.917,220,1.917,221,1.917,222,1.917,223,2.946,224,3.315,225,1.917,226,1.917,227,1.917,228,1.917,229,1.578]],["title/modules/HealthModule.html",[28,1.091,41,1.661]],["body/modules/HealthModule.html",[2,2.125,3,0.577,4,0.503,5,0.503,11,0.039,16,1.05,17,0.739,20,0.577,21,0.433,26,0.031,27,0.031,28,1.733,30,1.706,41,2.64,47,2.721,173,3.238,210,2.721,230,3.849,231,3.849,232,4.796,233,3.169,234,3.849,235,3.849,236,3.849,237,3.849]],["title/classes/Image.html",[21,0.34,238,1.487]],["body/classes/Image.html",[3,0.447,4,0.389,5,0.389,7,0.447,10,3.07,11,0.039,12,1.462,15,1.32,16,0.572,20,0.447,21,0.335,26,0.026,27,0.026,78,3.779,92,1.466,102,1.458,168,2.514,238,1.998,239,2.977,240,2.852,241,2.451,242,5.347,243,3.26,244,3.797,245,2.859,246,4.055,247,2.977,248,4.612,249,4.612,250,5.347,251,2.977,252,2.977,253,2.977,254,3.339,255,4.952,256,4.055,257,2.977,258,1.845,259,2.104,260,2.451,261,4.055,262,2.977]],["title/controllers/ImageUploadController.html",[0,1.338,263,1.871]],["body/controllers/ImageUploadController.html",[0,0.667,2,0.667,3,0.226,4,0.197,5,0.506,7,0.226,8,0.795,10,0.933,11,0.039,12,0.444,14,0.795,15,0.938,16,0.676,17,0.289,20,0.226,21,0.169,22,1.239,23,1.064,24,0.879,26,0.02,27,0.016,56,1.34,76,1.899,78,1.064,92,0.544,95,1.225,100,0.667,101,1.078,102,1.41,103,0.602,113,1.56,121,2.182,128,2.488,144,1.34,150,1.899,175,1.239,177,2.809,187,2.523,188,1.239,195,2.003,202,1.064,224,2.003,238,2.306,240,1.34,243,1.064,245,0.933,263,1.509,264,1.239,265,3.958,266,3.064,267,1.505,268,2.523,269,3.182,270,1.505,271,4.681,272,2.898,273,3.542,274,4.048,275,1.505,276,1.505,277,2.434,278,2.434,279,2.434,280,2.434,281,1.505,282,4.194,283,3.731,284,2.434,285,1.505,286,2.434,287,1.505,288,2.434,289,3.064,290,1.505,291,1.505,292,2.898,293,2.434,294,2.434,295,2.434,296,2.434,297,2.434,298,2.434,299,3.064,300,2.434,301,1.505,302,2.434,303,2.434,304,2.166,305,1.505,306,1.505,307,1.239,308,1.239,309,1.51,310,1.239,311,1.505,312,2.434,313,2.434,314,2.434,315,3.064,316,1.505,317,1.239,318,1.505,319,1.505,320,2.434,321,1.505,322,1.505,323,1.505,324,1.505,325,1.239,326,1.505,327,1.505,328,1.505,329,2.003,330,1.505,331,1.505,332,1.505,333,1.505,334,1.239,335,1.505,336,1.505,337,1.505,338,1.505,339,1.505,340,2.434,341,1.505,342,2.434,343,1.505,344,1.505,345,1.505,346,1.505,347,0.933,348,1.505,349,1.505,350,1.239,351,1.064,352,1.239,353,0.828,354,1.505,355,1.505,356,2.434,357,1.505,358,1.505,359,1.505,360,0.933,361,1.505,362,1.505,363,1.505]],["title/modules/ImageUploadModule.html",[28,1.091,42,1.661]],["body/modules/ImageUploadModule.html",[2,1.962,3,0.51,4,0.444,5,0.444,11,0.039,16,1.04,17,0.652,20,0.51,21,0.382,26,0.029,27,0.029,28,1.78,30,1.505,31,1.87,32,2.401,33,2.401,34,1.87,35,3.054,36,2.106,42,3.056,43,3.13,44,2.401,45,2.401,47,2.401,53,2.796,54,2.106,56,1.87,238,2.427,240,1.87,263,3.054,309,2.735,310,2.796,364,2.796,365,2.796,366,3.397,367,3.397,368,2.796,369,3.397]],["title/injectables/ImageUploadService.html",[84,0.58,309,1.487]],["body/injectables/ImageUploadService.html",[3,0.211,4,0.184,5,0.301,7,0.211,8,0.753,11,0.04,12,1.184,14,1.105,15,1.218,16,0.878,17,0.27,20,0.211,21,0.158,23,2.068,24,1.222,26,0.015,27,0.015,54,0.872,56,2.329,73,0.693,76,0.872,84,0.442,85,0.563,92,0.833,93,2.465,95,1.966,100,1.654,101,1.654,102,0.994,103,1.492,104,1.158,105,2.738,113,1.499,121,2.097,144,2.054,150,1.428,168,1.814,204,1.158,212,1.629,229,1.897,238,1.839,240,2.329,243,3.325,244,2.785,245,2.097,265,1.897,268,2.409,269,3.072,272,1.158,273,2.991,274,3.636,282,2.785,283,1.158,292,1.897,304,0.995,309,1.135,325,2.409,347,0.872,350,1.158,351,0.995,352,1.158,353,2.054,360,0.872,368,1.158,370,1.158,371,2.304,372,2.304,373,2.304,374,2.304,375,1.407,376,2.304,377,2.304,378,2.304,379,1.407,380,2.304,381,1.407,382,2.304,383,4.571,384,2.926,385,1.407,386,2.304,387,1.407,388,2.926,389,1.897,390,1.407,391,1.407,392,1.407,393,1.407,394,1.897,395,2.409,396,1.158,397,1.407,398,1.407,399,1.407,400,2.304,401,1.407,402,1.407,403,1.407,404,1.407,405,1.407,406,1.407,407,1.407,408,1.407,409,1.407,410,1.407,411,1.407,412,1.407,413,1.407,414,1.407,415,1.407,416,1.407,417,2.304,418,1.407,419,2.304,420,1.407,421,1.407,422,1.407,423,1.407,424,1.407,425,1.407,426,1.407,427,1.407,428,1.407,429,1.407,430,1.407,431,1.407,432,2.926,433,3.732,434,1.407,435,1.407,436,1.407,437,1.407,438,1.407,439,1.407,440,1.407,441,2.304,442,1.407,443,1.407,444,1.407,445,1.158,446,1.407,447,1.407,448,1.407,449,1.407,450,1.407,451,1.407,452,1.407,453,1.407,454,1.407,455,1.407,456,1.407,457,1.407,458,1.407,459,1.407,460,1.407]],["title/injectables/MailService.html",[84,0.58,461,2.133]],["body/injectables/MailService.html",[3,0.572,4,0.356,5,0.356,7,0.409,8,1.246,11,0.039,12,1.3,14,0.89,15,1.525,16,0.732,17,0.523,20,0.409,21,0.307,26,0.025,27,0.025,65,1.5,67,1.5,84,0.732,85,1.089,92,1.379,93,2.169,95,1.76,100,1.207,101,1.691,102,1.016,103,1.089,121,2.365,144,2.1,212,3.111,245,1.689,347,1.689,353,1.5,360,1.689,445,2.243,461,2.696,462,2.243,463,4.402,464,3.815,465,3.815,466,3.815,467,4.769,468,4.769,469,4.769,470,2.724,471,3.815,472,3.14,473,2.724,474,2.724,475,2.724,476,2.724,477,2.724,478,2.243,479,2.724,480,2.724,481,2.724,482,2.724,483,2.243,484,2.724,485,2.724,486,2.243,487,3.815,488,2.724,489,2.724,490,2.724,491,2.724,492,2.724]],["title/injectables/SmsService.html",[84,0.58,493,2.133]],["body/injectables/SmsService.html",[3,0.516,4,0.45,5,0.45,7,0.516,8,1.458,11,0.038,12,1.015,14,1.123,15,1.484,16,0.66,17,0.66,20,0.516,21,0.387,24,1.242,26,0.029,27,0.029,76,2.131,84,0.857,85,1.374,95,1.981,100,1.523,101,1.523,102,0.916,103,1.374,105,2.766,128,3.707,329,2.83,486,2.83,493,3.154,494,2.83,495,4.462,496,4.462,497,3.437,498,4.462,499,3.437,500,3.437,501,3.437,502,3.437,503,4.955,504,3.437,505,3.437,506,3.437,507,3.437]],["title/injectables/ValidateInputPipe.html",[84,0.58,508,2.133]],["body/injectables/ValidateInputPipe.html",[3,0.463,4,0.403,5,0.403,7,0.463,8,1.357,11,0.039,12,1.226,14,1.357,16,0.592,17,0.592,20,0.463,21,0.347,24,1.501,26,0.027,27,0.027,84,0.797,85,1.233,93,2.313,95,1.878,100,1.84,101,1.84,102,0.821,103,1.66,109,1.911,113,1.366,150,1.911,202,2.179,260,3.419,304,2.935,347,1.911,353,1.697,360,1.911,508,2.935,509,2.538,510,4.696,511,4.153,512,4.696,513,4.153,514,4.153,515,3.083,516,3.083,517,4.153,518,4.136,519,5.024,520,3.083,521,3.083,522,3.083,523,4.153,524,3.083,525,3.083,526,3.083,527,3.083]],["title/coverage.html",[528,2.893]],["body/coverage.html",[0,1.89,1,1.594,5,0.336,6,2.117,11,0.039,18,1.267,21,0.289,26,0.024,27,0.024,34,2.016,56,2.016,58,1.594,60,1.817,84,1.009,86,2.117,90,1.817,91,2.117,102,0.685,113,1.139,118,2.117,119,2.117,160,2.016,161,2.016,163,2.588,165,1.415,166,1.415,167,1.594,171,1.817,173,1.594,174,2.117,186,3.014,238,1.267,240,2.348,241,2.117,254,2.117,258,1.594,263,1.594,264,2.117,309,1.267,351,4.2,370,2.117,461,1.817,462,2.117,493,1.817,494,2.117,508,1.817,509,2.117,528,1.817,529,2.571,530,2.571,531,2.571,532,4.265,533,4.203,534,5.37,535,1.817,536,5.542,537,2.117,538,2.117,539,2.117,540,2.117,541,3.662,542,2.571,543,2.571,544,3.662,545,2.571,546,2.571,547,2.117,548,3.662,549,2.571,550,2.571,551,2.117,552,2.571]],["title/dependencies.html",[31,1.994,553,2.085]],["body/dependencies.html",[11,0.04,17,0.57,21,0.456,26,0.026,27,0.026,31,1.633,49,2.442,54,1.839,210,2.097,233,2.442,258,2.508,259,2.097,273,2.097,307,2.442,308,2.442,317,2.442,389,2.442,394,2.442,395,2.442,396,2.442,472,2.442,518,2.442,554,2.967,555,2.967,556,2.967,557,4.604,558,2.967,559,2.967,560,2.967,561,2.967,562,2.967,563,2.967,564,2.967,565,2.967,566,2.967,567,2.967,568,2.967,569,2.967,570,2.967,571,2.967,572,2.967,573,2.967,574,2.967,575,4.046,576,2.967,577,2.967,578,2.967,579,2.967,580,2.967,581,2.967,582,2.967,583,2.967,584,2.967,585,4.604,586,2.967,587,2.967,588,2.967,589,2.967,590,2.967,591,4.046,592,2.967,593,2.967,594,2.967,595,2.967,596,2.967,597,2.967,598,2.967,599,2.967,600,2.967,601,2.967,602,2.967]],["title/miscellaneous/enumerations.html",[603,1.248,604,2.983]],["body/miscellaneous/enumerations.html",[7,0.643,11,0.037,26,0.033,27,0.033,109,3.395,478,4.216,603,2.112,604,3.529,605,5.121,606,4.287,607,4.287,608,5.121,609,5.121]],["title/miscellaneous/functions.html",[189,2.561,603,1.248]],["body/miscellaneous/functions.html",[7,0.663,11,0.034,26,0.034,27,0.034,34,3.262,189,3.123,547,3.637,551,3.637,603,2.177,610,4.418,611,4.418]],["title/index.html",[7,0.38,612,2.533,613,2.533]],["body/index.html",[4,0.408,11,0.038,26,0.027,27,0.027,165,1.715,166,2.302,177,1.932,259,2.203,483,2.565,528,2.203,535,2.203,614,3.116,615,3.116,616,4.183,617,3.116,618,3.116,619,3.116,620,3.116,621,3.116,622,3.116,623,4.721,624,3.116,625,3.116,626,3.116,627,4.721,628,5.536,629,3.116,630,5.419,631,3.116,632,3.116,633,4.183,634,3.116,635,3.116,636,3.116,637,4.183,638,3.116,639,3.116,640,3.116,641,4.183,642,4.183,643,3.116,644,3.116,645,3.116,646,3.116,647,3.116,648,2.565,649,3.116,650,3.116,651,3.116,652,3.116,653,3.116,654,3.116,655,3.116,656,3.116,657,3.116,658,3.116,659,2.565,660,3.116,661,3.116,662,3.116,663,3.116,664,3.116,665,3.116,666,2.565]],["title/modules.html",[30,1.814]],["body/modules.html",[11,0.033,26,0.033,27,0.033,29,2.657,30,1.9,40,2.36,41,2.36,42,2.36,648,4.216,667,5.121,668,5.121,669,5.673,670,5.121,671,5.121]],["title/overview.html",[672,3.37]],["body/overview.html",[2,1.586,11,0.037,18,2.489,21,0.403,26,0.03,27,0.03,28,1.293,29,3.658,30,1.586,31,1.97,32,2.53,33,2.53,34,1.97,35,2.219,36,2.219,37,2.947,38,2.947,39,2.947,40,2.781,41,2.781,42,3.03,43,3.238,44,2.53,45,2.53,85,1.431,162,2.53,309,2.489,334,2.947,364,2.947,365,2.947,672,2.947,673,3.579,674,3.579,675,3.579,676,3.579]],["title/properties.html",[92,1.309,553,2.085]],["body/properties.html",[11,0.038,26,0.034,27,0.034,92,1.597,177,2.739,659,3.637,666,3.637,677,4.418,678,4.418,679,4.418,680,4.418,681,4.418]],["title/miscellaneous/variables.html",[603,1.248,682,2.983]],["body/miscellaneous/variables.html",[7,0.359,11,0.04,15,1.328,24,0.865,26,0.022,27,0.022,63,2.54,64,3.373,65,2.255,66,3.373,67,2.255,68,3.373,69,2.54,70,3.373,71,2.54,72,3.373,73,2.018,74,1.971,81,1.971,95,0.957,102,1.404,109,3.266,112,4.421,113,1.061,144,1.318,161,2.255,164,1.692,165,2.629,166,2.629,171,2.458,258,3.089,353,1.318,533,1.971,535,3.178,537,3.373,538,3.373,539,1.971,540,1.971,603,1.179,682,1.971,683,2.394,684,2.394,685,4.983,686,2.394,687,2.394,688,2.394,689,4.776,690,2.394,691,2.394,692,4.097,693,3.478,694,4.097,695,2.394,696,2.394,697,2.394,698,2.394,699,2.394]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":351,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":678,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["0.33.5",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["0/1",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":675,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":331,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["10.0.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{}}}],["150",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{}}}],["16.4.5",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["17.1.14",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":676,"title":{},"body":{"overview.html":{}}}],["2.1.6",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["2.1691.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["201",{"_index":286,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["2mb",{"_index":335,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["3",{"_index":334,"title":{},"body":{"controllers/ImageUploadController.html":{},"overview.html":{}}}],["3.0.2",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["3.9.3",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{}}}],["4",{"_index":673,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":288,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["5.1.1",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["6.37.3",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["6.9.13",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":674,"title":{},"body":{"overview.html":{}}}],["7.1.14",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["8.11.5",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":427,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["accesskeyid",{"_index":411,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["according",{"_index":294,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["actual",{"_index":502,"title":{},"body":{"injectables/SmsService.html":{}}}],["admin",{"_index":608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ajeniya",{"_index":681,"title":{},"body":{"properties.html":{}}}],["allowed",{"_index":342,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["allownull",{"_index":250,"title":{},"body":{"classes/Image.html":{}}}],["amazing",{"_index":649,"title":{},"body":{"index.html":{}}}],["api_key",{"_index":404,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["api_secret",{"_index":406,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["apibody",{"_index":312,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apiconsumes",{"_index":311,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apiconsumes('multipart/form",{"_index":323,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apioperation",{"_index":313,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apiquery",{"_index":314,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apiresponse",{"_index":315,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apitags",{"_index":316,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["apitags('images",{"_index":318,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["app",{"_index":483,"title":{},"body":{"injectables/MailService.html":{},"index.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":622,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":519,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["arguments",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["array",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{}}}],["aspect",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["assume",{"_index":507,"title":{},"body":{"injectables/SmsService.html":{}}}],["async",{"_index":95,"title":{},"body":{"injectables/CacheService.html":{},"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":477,"title":{},"body":{"injectables/MailService.html":{}}}],["author",{"_index":659,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadmodels",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":671,"title":{},"body":{"modules.html":{}}}],["await",{"_index":353,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/ValidateInputPipe.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":395,"title":{},"body":{"injectables/ImageUploadService.html":{},"dependencies.html":{}}}],["aws.s3",{"_index":388,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["axios",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":650,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":304,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/ValidateInputPipe.html":{}}}],["badrequestexception('no",{"_index":352,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["badrequestexception('only",{"_index":344,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["bcrypt",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":279,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["binary",{"_index":328,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["body",{"_index":458,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":669,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":667,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":456,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["buffer",{"_index":383,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["building",{"_index":617,"title":{},"body":{"index.html":{}}}],["cache",{"_index":94,"title":{},"body":{"injectables/CacheService.html":{}}}],["cacheservice",{"_index":90,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["calling",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["case",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":360,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/ValidateInputPipe.html":{}}}],["cb",{"_index":340,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["cb(null",{"_index":345,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["check",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["checks",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["choose",{"_index":278,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["class",{"_index":21,"title":{"classes/Image.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":239,"title":{},"body":{"classes/Image.html":{}}}],["cloud_name",{"_index":402,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["cloudinary",{"_index":273,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"dependencies.html":{}}}],["cloudinary.v2.config",{"_index":401,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["cloudinary.v2.uploader.upload_stream(options",{"_index":451,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_imageuploadmodule",{"_index":364,"title":{},"body":{"modules/ImageUploadModule.html":{},"overview.html":{}}}],["cluster_imageuploadmodule_providers",{"_index":365,"title":{},"body":{"modules/ImageUploadModule.html":{},"overview.html":{}}}],["column",{"_index":255,"title":{},"body":{"classes/Image.html":{}}}],["column({type",{"_index":248,"title":{},"body":{"classes/Image.html":{}}}],["components",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{}}}],["config",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":400,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["console.debug(message",{"_index":157,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["console.error('error",{"_index":445,"title":{},"body":{"injectables/ImageUploadService.html":{},"injectables/MailService.html":{}}}],["console.error(message",{"_index":153,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["console.log('message",{"_index":485,"title":{},"body":{"injectables/MailService.html":{}}}],["console.log('preview",{"_index":489,"title":{},"body":{"injectables/MailService.html":{}}}],["console.log(`sending",{"_index":506,"title":{},"body":{"injectables/SmsService.html":{}}}],["console.log(db",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(message",{"_index":151,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["console.warn(message",{"_index":155,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["const",{"_index":144,"title":{},"body":{"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{}}}],["constructor(imagemodel",{"_index":375,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImageUploadController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"coverage.html":{}}}],["controller('health",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('images",{"_index":319,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["convert",{"_index":422,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["core/database/database.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":528,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/Image.html":{}}}],["crop",{"_index":421,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["custom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["customlogger",{"_index":58,"title":{"injectables/CustomLogger.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomLogger.html":{},"coverage.html":{}}}],["data",{"_index":324,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["data')@apiquery({name",{"_index":276,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["database",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"controllers/HealthController.html":{},"injectables/ImageUploadService.html":{},"miscellaneous/variables.html":{}}}],["database.providers",{"_index":172,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databaseconfig",{"_index":161,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig.dev",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.production",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.test",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfigattributes",{"_index":167,"title":{"interfaces/DatabaseConfigAttributes.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"coverage.html":{}}}],["databasemodule",{"_index":40,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":171,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":257,"title":{},"body":{"classes/Image.html":{}}}],["datatype.integer",{"_index":262,"title":{},"body":{"classes/Image.html":{}}}],["datatype.string",{"_index":261,"title":{},"body":{"classes/Image.html":{}}}],["date",{"_index":246,"title":{},"body":{"classes/Image.html":{}}}],["date().toisostring",{"_index":146,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["db",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["debug",{"_index":120,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["debug(message",{"_index":126,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{}}}],["default",{"_index":112,"title":{},"body":{"injectables/CacheService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/HealthController.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["delete",{"_index":96,"title":{},"body":{"injectables/CacheService.html":{}}}],["delete(key",{"_index":98,"title":{},"body":{"injectables/CacheService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":164,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":535,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dialect",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":394,"title":{},"body":{"injectables/ImageUploadService.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":397,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["e",{"_index":523,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["e2e",{"_index":638,"title":{},"body":{"index.html":{}}}],["each",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["efficient",{"_index":618,"title":{},"body":{"index.html":{}}}],["email",{"_index":492,"title":{},"body":{"injectables/MailService.html":{}}}],["end(buffer",{"_index":454,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["ensure",{"_index":341,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["entities/image.entity",{"_index":368,"title":{},"body":{"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{}}}],["enum",{"_index":280,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["enumerations",{"_index":604,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":149,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["error",{"_index":121,"title":{},"body":{"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{}}}],["error('failed",{"_index":448,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["error(message",{"_index":130,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["error.constraints",{"_index":527,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["error.message",{"_index":361,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["errorlogstyle",{"_index":236,"title":{},"body":{"modules/HealthModule.html":{}}}],["errors",{"_index":516,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["errors.map(error",{"_index":526,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["example",{"_index":627,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["express",{"_index":308,"title":{},"body":{"controllers/ImageUploadController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":268,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["extends",{"_index":260,"title":{},"body":{"classes/Image.html":{},"injectables/ValidateInputPipe.html":{}}}],["false",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{}}}],["file.mimetype.startswith('image",{"_index":343,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["filefilter",{"_index":338,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["filename",{"_index":243,"title":{},"body":{"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["filename_override",{"_index":437,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["files",{"_index":282,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["files.length",{"_index":350,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["filesinterceptor",{"_index":306,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["filesinterceptor('files",{"_index":330,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["filesize",{"_index":333,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["fit",{"_index":428,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["folder",{"_index":435,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["format",{"_index":327,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["framework",{"_index":616,"title":{},"body":{"index.html":{}}}],["fs",{"_index":142,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["fs.appendfile('application.log",{"_index":148,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["function",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":189,"title":{"miscellaneous/functions.html":{}},"body":{"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["get(key",{"_index":106,"title":{},"body":{"injectables/CacheService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":612,"title":{"index.html":{}},"body":{}}],["graph",{"_index":670,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":645,"title":{},"body":{"index.html":{}}}],["handle",{"_index":416,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["handleerror",{"_index":511,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["handleerror(errors",{"_index":514,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["hapi/joi",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["health",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.check",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":234,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheckservice",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":173,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":41,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":656,"title":{},"body":{"index.html":{}}}],["host",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["hstore",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":469,"title":{},"body":{"injectables/MailService.html":{}}}],["httpmodule",{"_index":232,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://nestjs.com",{"_index":663,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["image",{"_index":238,"title":{"classes/Image.html":{}},"body":{"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"coverage.html":{}}}],["imagebuffer",{"_index":424,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["imagebuffer.length",{"_index":443,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["imagemodel",{"_index":377,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["images",{"_index":265,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["imageuploadcontroller",{"_index":263,"title":{"controllers/ImageUploadController.html":{}},"body":{"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"coverage.html":{}}}],["imageuploadmodule",{"_index":42,"title":{"modules/ImageUploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["imageuploadservice",{"_index":309,"title":{"injectables/ImageUploadService.html":{}},"body":{"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"coverage.html":{},"overview.html":{}}}],["imageurl",{"_index":433,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["implementation",{"_index":500,"title":{},"body":{"injectables/SmsService.html":{}}}],["implements",{"_index":143,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ImageUploadModule.html":{}}}],["including",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"controllers/HealthController.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["info.messageid",{"_index":488,"title":{},"body":{"injectables/MailService.html":{}}}],["injectable",{"_index":84,"title":{"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":393,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["injectmodel(image",{"_index":398,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["installation",{"_index":626,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":629,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":524,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["integration",{"_index":505,"title":{},"body":{"injectables/SmsService.html":{}}}],["interface",{"_index":160,"title":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"coverage.html":{}}}],["interfaces",{"_index":162,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"overview.html":{}}}],["invalid",{"_index":289,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["isglobal",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["istanbul",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["items",{"_index":326,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["join",{"_index":652,"title":{},"body":{"index.html":{}}}],["jpeg",{"_index":423,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["jwt",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":660,"title":{},"body":{"index.html":{}}}],["key",{"_index":104,"title":{},"body":{"injectables/CacheService.html":{},"injectables/ImageUploadService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["license",{"_index":666,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":642,"title":{},"body":{"index.html":{}}}],["limit",{"_index":336,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["limits",{"_index":332,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["links",{"_index":300,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["local",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":122,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["log(message",{"_index":134,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.service",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.service.ts",{"_index":119,"title":{},"body":{"injectables/CustomLogger.html":{},"coverage.html":{}}}],["logger.service.ts:14",{"_index":135,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.service.ts:19",{"_index":132,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.service.ts:24",{"_index":141,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.service.ts:29",{"_index":127,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.service.ts:34",{"_index":139,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger.service.ts:7",{"_index":137,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logger/custom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomLogger.html":{},"coverage.html":{}}}],["loggerservice",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomLogger.html":{}}}],["logmessage",{"_index":145,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logtofile",{"_index":123,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["logtofile(message",{"_index":136,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["mailoptions",{"_index":482,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":461,"title":{"injectables/MailService.html":{}},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["map",{"_index":111,"title":{},"body":{"injectables/CacheService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":128,"title":{},"body":{"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/SmsService.html":{}}}],["message}\\n",{"_index":147,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["metadata",{"_index":518,"title":{},"body":{"injectables/ValidateInputPipe.html":{},"dependencies.html":{}}}],["method",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["miscellaneous",{"_index":603,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":641,"title":{},"body":{"index.html":{}}}],["mock",{"_index":499,"title":{},"body":{"injectables/SmsService.html":{}}}],["mode",{"_index":633,"title":{},"body":{"index.html":{}}}],["model",{"_index":256,"title":{},"body":{"classes/Image.html":{}}}],["moderator",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/ImageUploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/ImageUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/image",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":655,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":272,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["mysql2",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":661,"title":{},"body":{"index.html":{}}}],["name",{"_index":101,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["nest",{"_index":623,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":665,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":233,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":307,"title":{},"body":{"controllers/ImageUploadController.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":317,"title":{},"body":{"controllers/ImageUploadController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":113,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_repository",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["node.js",{"_index":615,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":472,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":474,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":490,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.transporter",{"_index":471,"title":{},"body":{"injectables/MailService.html":{}}}],["npm",{"_index":628,"title":{},"body":{"index.html":{}}}],["number",{"_index":168,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"classes/Image.html":{},"injectables/ImageUploadService.html":{}}}],["number(process.env.mailtrap_port",{"_index":476,"title":{},"body":{"injectables/MailService.html":{}}}],["object",{"_index":325,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["objects",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["occurred",{"_index":362,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["oladimeji",{"_index":680,"title":{},"body":{"properties.html":{}}}],["open",{"_index":643,"title":{},"body":{"index.html":{}}}],["optional",{"_index":103,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfigAttributes.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["options",{"_index":384,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["overview",{"_index":672,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":553,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":320,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["pass",{"_index":480,"title":{},"body":{"injectables/MailService.html":{}}}],["passport",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ImageUploadService.html":{}}}],["per",{"_index":337,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["pg",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":498,"title":{},"body":{"injectables/SmsService.html":{}}}],["please",{"_index":653,"title":{},"body":{"index.html":{}}}],["port",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":301,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["post('upload",{"_index":321,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["post('upload')@apioperation({summary",{"_index":270,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["prefix",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{}}}],["prepare",{"_index":355,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["pretty",{"_index":237,"title":{},"body":{"modules/HealthModule.html":{}}}],["private",{"_index":93,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/HealthController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/ValidateInputPipe.html":{}}}],["process",{"_index":419,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.aws_dev_bucket",{"_index":457,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.aws_dev_region",{"_index":410,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.aws_s3_access",{"_index":412,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.aws_s3_secret",{"_index":414,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.cloudinary_api_key",{"_index":405,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.cloudinary_api_secret",{"_index":407,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.cloudinary_name",{"_index":403,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["process.env.db_dialect",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.db_name_development",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name_production",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name_test",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.db_pass",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.mailtrap_host",{"_index":475,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.mailtrap_pass",{"_index":481,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.mailtrap_user",{"_index":479,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.node_env",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processandstoreimages",{"_index":371,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["processandstoreimages(files",{"_index":378,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["processes",{"_index":293,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["processing",{"_index":446,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["production",{"_index":165,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":614,"title":{},"body":{"index.html":{}}}],["project",{"_index":644,"title":{},"body":{"index.html":{}}}],["promise",{"_index":105,"title":{},"body":{"injectables/CacheService.html":{},"controllers/HealthController.html":{},"injectables/ImageUploadService.html":{},"injectables/SmsService.html":{}}}],["promise((resolve",{"_index":449,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["properties",{"_index":92,"title":{"properties.html":{}},"body":{"injectables/CacheService.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"properties.html":{}}}],["provide",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":504,"title":{},"body":{"injectables/SmsService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["public",{"_index":512,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["query",{"_index":305,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["query('type",{"_index":346,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["read",{"_index":654,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["reflect",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":409,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["reject",{"_index":450,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["reject(error",{"_index":452,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["replace",{"_index":501,"title":{},"body":{"injectables/SmsService.html":{}}}],["repository",{"_index":625,"title":{},"body":{"index.html":{}}}],["representing",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["req",{"_index":339,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["required",{"_index":277,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}],["resize",{"_index":420,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["resize(800",{"_index":426,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["resolve(result",{"_index":453,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["resolves",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ImageUploadService.html":{}}}],["result.filename",{"_index":358,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["result.imageurl",{"_index":359,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.map(result",{"_index":357,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{}}}],["role",{"_index":605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":630,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":487,"title":{},"body":{"injectables/MailService.html":{}}}],["s3",{"_index":274,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["s3'].includes(uploadtype",{"_index":348,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["scalable",{"_index":619,"title":{},"body":{"index.html":{}}}],["schema",{"_index":284,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["sdk",{"_index":396,"title":{},"body":{"injectables/ImageUploadService.html":{},"dependencies.html":{}}}],["secretaccesskey",{"_index":413,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["sending",{"_index":491,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail",{"_index":464,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail(to",{"_index":466,"title":{},"body":{"injectables/MailService.html":{}}}],["sendsms",{"_index":495,"title":{},"body":{"injectables/SmsService.html":{}}}],["sendsms(phonenumber",{"_index":496,"title":{},"body":{"injectables/SmsService.html":{}}}],["sent",{"_index":486,"title":{},"body":{"injectables/MailService.html":{},"injectables/SmsService.html":{}}}],["sequelize",{"_index":258,"title":{},"body":{"classes/Image.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sequelize(config",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelize.addmodels([user",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelize.sync",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sequelizehealthindicator",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["sequelizemodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{}}}],["sequelizemodule.forfeature([image",{"_index":369,"title":{},"body":{"modules/ImageUploadModule.html":{}}}],["sequelizemodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":620,"title":{},"body":{"index.html":{}}}],["set",{"_index":97,"title":{},"body":{"injectables/CacheService.html":{}}}],["set(key",{"_index":108,"title":{},"body":{"injectables/CacheService.html":{}}}],["sharp",{"_index":389,"title":{},"body":{"injectables/ImageUploadService.html":{},"dependencies.html":{}}}],["sharp(file.buffer",{"_index":425,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["sharp.fit.cover",{"_index":429,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["side",{"_index":621,"title":{},"body":{"index.html":{}}}],["size",{"_index":244,"title":{},"body":{"classes/Image.html":{},"injectables/ImageUploadService.html":{}}}],["sms",{"_index":503,"title":{},"body":{"injectables/SmsService.html":{}}}],["smsservice",{"_index":493,"title":{"injectables/SmsService.html":{}},"body":{"injectables/SmsService.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"index.html":{}}}],["specified",{"_index":295,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["sponsors",{"_index":647,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["src/.../database.config.ts",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":610,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repl.ts",{"_index":611,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["src/core/constants/index.ts",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/database/database.config.ts",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/database/database.module.ts",{"_index":170,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/core/database/database.providers.ts",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/database/dbconfig.interface.ts",{"_index":163,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"coverage.html":{}}}],["src/core/pipes/validate.pipe.ts",{"_index":509,"title":{},"body":{"injectables/ValidateInputPipe.html":{},"coverage.html":{}}}],["src/core/pipes/validate.pipe.ts:15",{"_index":515,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["src/core/pipes/validate.pipe.ts:5",{"_index":520,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["src/custom",{"_index":118,"title":{},"body":{"injectables/CustomLogger.html":{},"coverage.html":{}}}],["src/enum/role.enum.ts",{"_index":607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/health/health.controller.ts",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:30",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":230,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/image",{"_index":240,"title":{},"body":{"classes/Image.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"coverage.html":{}}}],["src/repl.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utility/cache.service.ts",{"_index":91,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/utility/cache.service.ts:11",{"_index":107,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/utility/cache.service.ts:15",{"_index":99,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/utility/cache.service.ts:5",{"_index":114,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/utility/cache.service.ts:7",{"_index":110,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/utility/mail.service.ts",{"_index":462,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/utility/mail.service.ts:19",{"_index":470,"title":{},"body":{"injectables/MailService.html":{}}}],["src/utility/mail.service.ts:6",{"_index":465,"title":{},"body":{"injectables/MailService.html":{}}}],["src/utility/sms.service.ts",{"_index":494,"title":{},"body":{"injectables/SmsService.html":{},"coverage.html":{}}}],["src/utility/sms.service.ts:5",{"_index":497,"title":{},"body":{"injectables/SmsService.html":{}}}],["start",{"_index":631,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":634,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":635,"title":{},"body":{"index.html":{}}}],["started",{"_index":613,"title":{"index.html":{}},"body":{}}],["starter",{"_index":624,"title":{},"body":{"index.html":{}}}],["statements",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{}}}],["stay",{"_index":657,"title":{},"body":{"index.html":{}}}],["storage",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{}}}],["storage'})@apiconsumes('multipart/form",{"_index":275,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["store",{"_index":441,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["storeimage",{"_index":372,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["storeimage(filename",{"_index":380,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["storing",{"_index":447,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":467,"title":{},"body":{"injectables/MailService.html":{}}}],["success",{"_index":299,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["successfully",{"_index":329,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/SmsService.html":{}}}],["successfully'})@apiresponse({status",{"_index":287,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["successmessage",{"_index":356,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["summary",{"_index":322,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["super.transform(value",{"_index":522,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["support",{"_index":648,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supports",{"_index":296,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["svg",{"_index":668,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["system's",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["table",{"_index":254,"title":{},"body":{"classes/Image.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["terminusmodule",{"_index":231,"title":{},"body":{"modules/HealthModule.html":{}}}],["terminusmodule.forroot",{"_index":235,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":166,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":640,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":639,"title":{},"body":{"index.html":{}}}],["tests",{"_index":637,"title":{},"body":{"index.html":{}}}],["text",{"_index":468,"title":{},"body":{"injectables/MailService.html":{}}}],["thanks",{"_index":646,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cache.delete(key",{"_index":117,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get(key",{"_index":116,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.set(key",{"_index":115,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.db.pingcheck('database",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage('storage",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.imagemodel.create",{"_index":460,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["this.imageuploadservice.processandstoreimages",{"_index":354,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["this.logtofile(`debug",{"_index":158,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.logtofile(`error",{"_index":154,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.logtofile(`log",{"_index":152,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.logtofile(`verbose",{"_index":159,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.logtofile(`warn",{"_index":156,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["this.memory.checkheap('memory_heap",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss('memory_rss",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3",{"_index":408,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["this.s3.upload(uploadparams).promise",{"_index":459,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["this.storeimage(filename",{"_index":442,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["this.transporter",{"_index":473,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":484,"title":{},"body":{"injectables/MailService.html":{}}}],["this.uploadtocloudinary(imagebuffer",{"_index":434,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["this.uploadtos3(imagebuffer",{"_index":439,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["three",{"_index":297,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["thresholdpercent",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":150,"title":{},"body":{"injectables/CustomLogger.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/ValidateInputPipe.html":{}}}],["timeout",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["tobuffer",{"_index":431,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["toformat('jpeg",{"_index":430,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["touch",{"_index":658,"title":{},"body":{"index.html":{}}}],["trace",{"_index":131,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["transform",{"_index":513,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["transform(value",{"_index":517,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["transformer",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":463,"title":{},"body":{"injectables/MailService.html":{}}}],["true",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/SmsService.html":{}}}],["try",{"_index":347,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/ValidateInputPipe.html":{}}}],["twitter",{"_index":664,"title":{},"body":{"index.html":{}}}],["type",{"_index":102,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CustomLogger.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{},"injectables/SmsService.html":{},"injectables/ValidateInputPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type'})@useinterceptors(undefined",{"_index":290,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["typeof",{"_index":399,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["types",{"_index":298,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["types/hapi__joi",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":259,"title":{},"body":{"classes/Image.html":{},"dependencies.html":{},"index.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"classes/Image.html":{}}}],["undefined})@apibody({description",{"_index":281,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["undefined})@apiresponse({status",{"_index":285,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["unit",{"_index":636,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ImageUploadController.html":{},"injectables/ValidateInputPipe.html":{}}}],["unlicensed",{"_index":679,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":521,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["unprocessableentityexception(this.handleerror(e.message",{"_index":525,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["updated",{"_index":415,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["upload",{"_index":271,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["upload.controller",{"_index":367,"title":{},"body":{"modules/ImageUploadModule.html":{}}}],["upload.controller.ts",{"_index":264,"title":{},"body":{"controllers/ImageUploadController.html":{},"coverage.html":{}}}],["upload.controller.ts:69",{"_index":291,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["upload.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.module.ts",{"_index":366,"title":{},"body":{"modules/ImageUploadModule.html":{}}}],["upload.service",{"_index":310,"title":{},"body":{"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{}}}],["upload.service.ts",{"_index":370,"title":{},"body":{"injectables/ImageUploadService.html":{},"coverage.html":{}}}],["upload.service.ts:106",{"_index":381,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["upload.service.ts:15",{"_index":376,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["upload.service.ts:37",{"_index":379,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["upload.service.ts:84",{"_index":385,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["upload.service.ts:96",{"_index":387,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["upload/entities/image.entity.ts",{"_index":241,"title":{},"body":{"classes/Image.html":{},"coverage.html":{}}}],["upload/entities/image.entity.ts:15",{"_index":253,"title":{},"body":{"classes/Image.html":{}}}],["upload/entities/image.entity.ts:21",{"_index":252,"title":{},"body":{"classes/Image.html":{}}}],["upload/entities/image.entity.ts:24",{"_index":247,"title":{},"body":{"classes/Image.html":{}}}],["upload/entities/image.entity.ts:9",{"_index":251,"title":{},"body":{"classes/Image.html":{}}}],["upload/image",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"controllers/ImageUploadController.html":{},"modules/ImageUploadModule.html":{},"injectables/ImageUploadService.html":{},"coverage.html":{}}}],["uploaded",{"_index":283,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["uploadedfiles",{"_index":302,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["uploadimages",{"_index":266,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["uploadimages(files",{"_index":267,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["uploading",{"_index":363,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["uploadparams",{"_index":455,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadresult",{"_index":432,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadresult.location",{"_index":440,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadresult.secure_url",{"_index":438,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadresults",{"_index":417,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadresults.push",{"_index":444,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploads",{"_index":292,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["uploadtocloudinary",{"_index":373,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadtocloudinary(buffer",{"_index":382,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadtos3",{"_index":374,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadtos3(buffer",{"_index":386,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uploadtype",{"_index":269,"title":{},"body":{"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{}}}],["url",{"_index":245,"title":{},"body":{"classes/Image.html":{},"controllers/ImageUploadController.html":{},"injectables/ImageUploadService.html":{},"injectables/MailService.html":{}}}],["urldatabase",{"_index":169,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{}}}],["usage",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["use",{"_index":349,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["use_filename",{"_index":436,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["useclass",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useinterceptors",{"_index":303,"title":{},"body":{"controllers/ImageUploadController.html":{}}}],["user",{"_index":478,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/enumerations.html":{}}}],["user_repository",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/DatabaseConfigAttributes.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":392,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uuidv4",{"_index":391,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["uuidv4()}.jpeg",{"_index":418,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["v4",{"_index":390,"title":{},"body":{"injectables/ImageUploadService.html":{}}}],["validateinputpipe",{"_index":508,"title":{"injectables/ValidateInputPipe.html":{}},"body":{"injectables/ValidateInputPipe.html":{},"coverage.html":{}}}],["validationpipe",{"_index":510,"title":{},"body":{"injectables/ValidateInputPipe.html":{}}}],["validator",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":109,"title":{},"body":{"injectables/CacheService.html":{},"injectables/ValidateInputPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":682,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["verbose",{"_index":124,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["verbose(message",{"_index":138,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["version",{"_index":677,"title":{},"body":{"properties.html":{}}}],["void",{"_index":129,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["warn",{"_index":125,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["warn(message",{"_index":140,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["watch",{"_index":632,"title":{},"body":{"index.html":{}}}],["website",{"_index":662,"title":{},"body":{"index.html":{}}}],["world",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":133,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["you'd",{"_index":651,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageUploadModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nImageUploadModule\n\nImageUploadModule\n\nAppModule -->\n\nImageUploadModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            ImageUploadModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { HealthModule } from './health/health.module';\nimport { DatabaseModule } from './core/database/database.module';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { ImageUploadModule } from './modules/image-upload/image-upload.module';\nimport { CustomLogger } from './custom-logger/custom-logger.service';\n\n@Module({\n  imports: [\n    SequelizeModule.forRoot({\n      dialect: process.env.DB_DIALECT as any,\n      host: process.env.DB_HOST,\n      port: process.env.DB_PORT as any,\n      username: process.env.DB_USER,\n      password: process.env.DB_PASS,\n      database: process.env.DB_NAME_TEST,\n      autoLoadModels: true,\n      synchronize: false,\n    }),\n    ConfigModule.forRoot({ isGlobal: true }),\n    HealthModule,\n    DatabaseModule,\n    ImageUploadModule,\n],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: 'LoggerService',\n      useClass: CustomLogger,\n    },\n  ],\n})\nexport class AppModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utility/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utility/cache.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utility/cache.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utility/cache.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/utility/cache.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CacheService {\n  private cache: Map = new Map();\n\n  async set(key: string, value: any): Promise {\n    this.cache.set(key, value);\n  }\n\n  async get(key: string): Promise {\n    return this.cache.get(key);\n  }\n\n  async delete(key: string): Promise {\n    this.cache.delete(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomLogger.html":{"url":"injectables/CustomLogger.html","title":"injectable - CustomLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/custom-logger/custom-logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                logToFile\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-logger/custom-logger.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-logger/custom-logger.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-logger/custom-logger.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logToFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    logToFile(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-logger/custom-logger.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-logger/custom-logger.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-logger/custom-logger.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService } from '@nestjs/common';\nimport * as fs from 'fs';\n\n@Injectable()\nexport class CustomLogger implements LoggerService {\n    \n  private logToFile(message: string): void {\n    const logMessage = `${new Date().toISOString()} - ${message}\\n`;\n    fs.appendFile('application.log', logMessage, (err) => {\n      if (err) throw err;\n    });\n  }\n\n  log(message: string) {\n    console.log(message);\n    this.logToFile(`LOG: ${message}`);\n  }\n\n  error(message: string, trace?: string) {\n    console.error(message);\n    this.logToFile(`ERROR: ${message} ${trace ? `- Trace: ${trace}` : ''}`);\n  }\n\n  warn(message: string) {\n    console.warn(message);\n    this.logToFile(`WARN: ${message}`);\n  }\n\n  debug(message: string) {\n    console.debug(message);\n    this.logToFile(`DEBUG: ${message}`);\n  }\n\n  verbose(message: string) {\n    console.log(message);\n    this.logToFile(`VERBOSE: ${message}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/database/dbConfig.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dev\n                                        \n                                \n                                \n                                        \n                                            production\n                                        \n                                \n                                \n                                        \n                                            test\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dev:         DatabaseConfigAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseConfigAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         DatabaseConfigAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseConfigAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        test\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        test:         DatabaseConfigAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseConfigAttributes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatabaseConfigAttributes {\n    username?: string;\n    password?: string;\n    database?: string;\n    host?: string;\n    port?: number | string;\n    dialect?: string;\n    urlDatabase?: string;\n}\n\nexport interface DatabaseConfig {\n    dev: DatabaseConfigAttributes;\n    test: DatabaseConfigAttributes;\n    production: DatabaseConfigAttributes;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfigAttributes.html":{"url":"interfaces/DatabaseConfigAttributes.html","title":"interface - DatabaseConfigAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfigAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/database/dbConfig.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            database\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dialect\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            host\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            port\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            urlDatabase\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dialect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialect:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlDatabase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urlDatabase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatabaseConfigAttributes {\n    username?: string;\n    password?: string;\n    database?: string;\n    host?: string;\n    port?: number | string;\n    dialect?: string;\n    urlDatabase?: string;\n}\n\nexport interface DatabaseConfig {\n    dev: DatabaseConfigAttributes;\n    test: DatabaseConfigAttributes;\n    production: DatabaseConfigAttributes;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                The HealthController class checks the health of various components including the database, memory, and disk.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:30\n                        \n                    \n\n\n            \n                \n                        The function checks the health of various components including the database, memory, and storage.\nwith an array of functions as arguments. Each function in the array is a check for a different\naspect of the system's health, including the status of the database, memory usage, and disk\nstorage. The health.check() method will return a Promise that resolves with an array of objects\nrepresenting the results of each check\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The check() function is returning the result of calling the health.check() method\nwith an array of functions as arguments. Each function in the array is a check for a different\naspect of the system's health, including the status of the database, memory usage, and disk\nstorage. The health.check() method will return a Promise that resolves with an array of objects\nrepresenting the results of each check\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  MemoryHealthIndicator,\n  SequelizeHealthIndicator,\n} from '@nestjs/terminus';\n\n/** The HealthController class checks the health of various components including the database, memory, and disk. */\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: SequelizeHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n  ) {\n    //console.log(db);\n  }\n\n  /**\n   * The function checks the health of various components including the database, memory, and storage.\n   * @returns The `check()` function is returning the result of calling the `health.check()` method\n   * with an array of functions as arguments. Each function in the array is a check for a different\n   * aspect of the system's health, including the status of the database, memory usage, and disk\n   * storage. The `health.check()` method will return a Promise that resolves with an array of objects\n   * representing the results of each check\n   */\n  @Get()\n  async check() {\n    return this.health.check([\n      /* istanbul ignore next */\n      () => this.db.pingCheck('database', { timeout: 300 }),\n      /* istanbul ignore next */\n      () => this.memory.checkHeap('memory_heap', 150 * 1024 * 1024),\n      /* istanbul ignore next */\n      () => this.memory.checkRSS('memory_rss', 150 * 1024 * 1024),\n      /* istanbul ignore next */\n      () =>\n        this.disk.checkStorage('storage', { thresholdPercent: 0.8, path: '/' }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule.forRoot({\n    errorLogStyle: 'pretty',\n  }), \n  HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image.html":{"url":"classes/Image.html","title":"class - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/image-upload/entities/image.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                fileName\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreatedAt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/image-upload/entities/image.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/image-upload/entities/image.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/image-upload/entities/image.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/image-upload/entities/image.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table, Column, Model, DataType, CreatedAt } from 'sequelize-typescript';\n\n@Table\nexport class Image extends Model {\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  fileName: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n  })\n  url: string;\n\n  @Column({\n    type: DataType.INTEGER,\n    allowNull: false,\n  })\n  size: number;\n\n  @CreatedAt\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImageUploadController.html":{"url":"controllers/ImageUploadController.html","title":"controller - ImageUploadController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImageUploadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/image-upload/image-upload.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadImages\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImages(files: Express.Multer.File[], uploadType: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ApiOperation({summary: 'Upload multiple images to cloudinary or s3 storage'})@ApiConsumes('multipart/form-data')@ApiQuery({name: 'type', required: true, description: 'Upload type. Choose between \"cloudinary\" or \"s3\".', enum: undefined})@ApiBody({description: 'Image files to be uploaded', schema: undefined})@ApiResponse({status: 201, description: 'Images uploaded successfully'})@ApiResponse({status: 400, description: 'Invalid upload type or file type'})@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/image-upload/image-upload.controller.ts:69\n                        \n                    \n\n\n            \n                \n                        Uploads multiple images and processes them according to the specified upload type.\nSupports three types of uploads: 'cloudinary' or 's3'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The uploaded image files.\n\n                                            \n                                        \n                                        \n                                                uploadType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The storage type: 'cloudinary' or 's3'.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A success message with image links or an error.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UploadedFiles,\n  UseInterceptors,\n  BadRequestException,\n  Query,\n} from '@nestjs/common';\nimport { FilesInterceptor } from '@nestjs/platform-express';\nimport { ImageUploadService } from './image-upload.service';\nimport { ApiConsumes, ApiBody, ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Images')\n@Controller('images')\nexport class ImageUploadController {\n  constructor(private readonly imageUploadService: ImageUploadService) {}\n\n  /**\n   * Uploads multiple images and processes them according to the specified upload type.\n   * Supports three types of uploads: 'cloudinary' or 's3'.\n   * \n   * @param files The uploaded image files.\n   * @param uploadType The storage type: 'cloudinary' or 's3'.\n   * @returns A success message with image links or an error.\n   */\n  @Post('upload')\n  @ApiOperation({ summary: 'Upload multiple images to cloudinary or s3 storage' })\n  @ApiConsumes('multipart/form-data')\n  @ApiQuery({\n    name: 'type',\n    required: true,\n    description: 'Upload type. Choose between \"cloudinary\" or \"s3\".',\n    enum: ['cloudinary', 's3'],\n  })\n  @ApiBody({\n    description: 'Image files to be uploaded',\n    schema: {\n      type: 'object',\n      properties: {\n        files: {\n          type: 'array',\n          items: {\n            type: 'string',\n            format: 'binary',\n          },\n        },\n      },\n    },\n  })\n  @ApiResponse({ status: 201, description: 'Images uploaded successfully' })\n  @ApiResponse({ status: 400, description: 'Invalid upload type or file type' })\n  @UseInterceptors(\n    FilesInterceptor('files', 10, {\n      limits: {\n        fileSize: 3 * 1024 * 1024, // 2MB limit per file\n      },\n      fileFilter: (req, file, cb) => {\n        // Ensure that only image files are allowed\n        if (!file.mimetype.startsWith('image/')) {\n          return cb(\n            new BadRequestException('Only image files are allowed'),\n            false,\n          );\n        }\n        cb(null, true);\n      },\n    }),\n  )\n  async uploadImages(\n    @UploadedFiles() files: Express.Multer.File[],\n    @Query('type') uploadType: string,\n  ) {\n    try {\n      if (!['cloudinary', 's3'].includes(uploadType)) {\n        throw new BadRequestException(\n          'Invalid upload type. Use \"cloudinary\" or \"s3\".',\n        );\n      }\n\n      if (!files || files.length === 0) {\n        throw new BadRequestException('No files were uploaded.');\n      }\n\n      const results = await this.imageUploadService.processAndStoreImages(\n        files,\n        uploadType as 'cloudinary' | 's3',\n      );\n\n      // Prepare success message\n      const successMessage = {\n        message: 'Images uploaded successfully',\n        images: results.map(result => ({\n          fileName: result.fileName,\n          url: result.imageUrl,\n        })),\n      };\n\n      return successMessage;\n\n    } catch (error) {\n      throw new BadRequestException(\n        error.message || 'An error occurred while uploading the images.',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageUploadModule.html":{"url":"modules/ImageUploadModule.html","title":"module - ImageUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageUploadModule\n\n\n\ncluster_ImageUploadModule_providers\n\n\n\n\nImageUploadService\n\nImageUploadService\n\n\n\nImageUploadModule\n\nImageUploadModule\n\nImageUploadModule -->\n\nImageUploadService->ImageUploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/image-upload/image-upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImageUploadService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImageUploadController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { ImageUploadService } from './image-upload.service';\nimport { ImageUploadController } from './image-upload.controller';\nimport { Image } from './entities/image.entity';\n\n@Module({\n  imports: [SequelizeModule.forFeature([Image])],\n  controllers: [ImageUploadController],\n  providers: [ImageUploadService],\n})\nexport class ImageUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageUploadService.html":{"url":"injectables/ImageUploadService.html","title":"injectable - ImageUploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageUploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/image-upload/image-upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                processAndStoreImages\n                            \n                            \n                                    Private\n                                    Async\n                                storeImage\n                            \n                            \n                                    Private\n                                    Async\n                                uploadToCloudinary\n                            \n                            \n                                    Private\n                                    Async\n                                uploadToS3\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imageModel)\n                    \n                \n                        \n                            \n                                Defined in src/modules/image-upload/image-upload.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processAndStoreImages\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndStoreImages(files: Express.Multer.File[], uploadType: \"cloudinary\" | \"s3\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/image-upload/image-upload.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uploadType\n                                            \n                                                        \"cloudinary\" | \"s3\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        storeImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeImage(fileName: string, url: string, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/image-upload/image-upload.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        uploadToCloudinary\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadToCloudinary(buffer: Buffer, options: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/image-upload/image-upload.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        uploadToS3\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadToS3(buffer: Buffer, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/image-upload/image-upload.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AWS.S3\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/image-upload/image-upload.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport * as sharp from 'sharp';\nimport * as path from 'path';\nimport { v4 as uuidv4 } from 'uuid';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Image } from './entities/image.entity';\nimport * as cloudinary from 'cloudinary';\nimport * as dotenv from 'dotenv';\nimport * as AWS from 'aws-sdk';\n\ndotenv.config();\n\n@Injectable()\nexport class ImageUploadService {\n  private readonly s3: AWS.S3;\n\n  constructor(\n    @InjectModel(Image)\n    private imageModel: typeof Image,\n  ) {\n    // Cloudinary configuration\n    cloudinary.v2.config({\n      cloud_name: process.env.CLOUDINARY_NAME,\n      api_key: process.env.CLOUDINARY_API_KEY,\n      api_secret: process.env.CLOUDINARY_API_SECRET,\n    });\n\n    // AWS S3 configuration\n    this.s3 = new AWS.S3({\n      region: process.env.AWS_DEV_REGION,\n      accessKeyId: process.env.AWS_S3_ACCESS,\n      secretAccessKey: process.env.AWS_S3_SECRET,\n    });\n  }\n\n  // Updated to handle multiple image uploads\n  async processAndStoreImages(files: Express.Multer.File[], uploadType: 'cloudinary' | 's3'): Promise {\n    if (!files || files.length === 0) {\n      throw new BadRequestException('No files uploaded');\n    }\n\n    const uploadResults = [];\n\n    try {\n      for (const file of files) {\n        const fileName = `${uuidv4()}.jpeg`;\n\n        // Process the image: Resize, crop, and convert to JPEG\n        const imageBuffer = await sharp(file.buffer)\n          .resize(800, 800, {\n            fit: sharp.fit.cover,\n          })\n          .toFormat('jpeg')\n          .toBuffer();\n\n        let uploadResult;\n        let imageUrl;\n\n        if (uploadType === 'cloudinary') {\n          uploadResult = await this.uploadToCloudinary(imageBuffer, {\n            folder: 'uploads',\n            use_filename: true,\n            filename_override: fileName,\n          });\n          imageUrl = uploadResult.secure_url;\n        } else if (uploadType === 's3') {\n          uploadResult = await this.uploadToS3(imageBuffer, fileName);\n          imageUrl = uploadResult.Location;\n        }\n\n        // Store the image in the database\n        await this.storeImage(fileName, imageUrl, imageBuffer.length);\n        uploadResults.push({ fileName, imageUrl });\n      }\n\n      return uploadResults;\n\n    } catch (error) {\n      console.error('Error processing and storing images:', error);\n      throw new Error('Failed to process and store images');\n    }\n  }\n\n  private async uploadToCloudinary(buffer: Buffer, options: object): Promise {\n    return new Promise((resolve, reject) => {\n      cloudinary.v2.uploader.upload_stream(options, (error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      }).end(buffer);\n    });\n  }\n\n  private async uploadToS3(buffer: Buffer, fileName: string): Promise {\n    const uploadParams = {\n      Bucket: process.env.AWS_DEV_BUCKET,\n      Body: buffer,\n      Key: fileName,\n    };\n\n    return this.s3.upload(uploadParams).promise();\n  }\n\n  private async storeImage(fileName: string, url: string, size: number): Promise {\n    return await this.imageModel.create({\n      fileName,\n      url,\n      size,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utility/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utility/mail.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(to: string, subject: string, text: string, html: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utility/mail.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                html\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     nodemailer.Transporter\n\n                    \n                \n                    \n                        \n                                Defined in src/utility/mail.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\n\n@Injectable()\nexport class MailService {\n  private transporter: nodemailer.Transporter;\n\n  constructor() {\n    this.transporter = nodemailer.createTransport({\n      host: process.env.MAILTRAP_HOST,\n      port: Number(process.env.MAILTRAP_PORT),\n      auth: {\n        user: process.env.MAILTRAP_USER,\n        pass: process.env.MAILTRAP_PASS,\n      },\n    });\n  }\n\n  async sendMail(to: string, subject: string, text: string, html: string) {\n    const mailOptions = {\n      from: '\"Your App Name\" ',\n      to,\n      subject,\n      text,\n      html,\n    };\n\n    try {\n      const info = await this.transporter.sendMail(mailOptions);\n      console.log('Message sent: %s', info.messageId);\n      console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\n    } catch (error) {\n      console.error('Error sending email: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmsService.html":{"url":"injectables/SmsService.html","title":"injectable - SmsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utility/sms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendSms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendSms\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendSms(phoneNumber: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utility/sms.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SmsService {\n  async sendSms(phoneNumber: string, message: string): Promise {\n    // This is a mock implementation. You would replace this with your actual SMS provider integration.\n    console.log(`Sending SMS to ${phoneNumber}: ${message}`);\n    return true; // Assume SMS was sent successfully\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateInputPipe.html":{"url":"injectables/ValidateInputPipe.html","title":"injectable - ValidateInputPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidateInputPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/pipes/validate.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(errors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pipes/validate.pipe.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pipes/validate.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ArgumentMetadata, BadRequestException, ValidationPipe, UnprocessableEntityException } from '@nestjs/common';\n\n@Injectable()\nexport class ValidateInputPipe extends ValidationPipe {\n   public async transform(value, metadata: ArgumentMetadata) {\n      try {\n        return await super.transform(value, metadata);\n      } catch (e) {\n         if (e instanceof BadRequestException) {\n            throw new UnprocessableEntityException(this.handleError(e.message));\n         }\n      }\n   }\n\n   private handleError(errors) {\n        return errors.map(error => error.constraints);\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/constants/index.ts\n            \n            variable\n            DEVELOPMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/index.ts\n            \n            variable\n            NEWS_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/index.ts\n            \n            variable\n            PRODUCTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/index.ts\n            \n            variable\n            SEQUELIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/index.ts\n            \n            variable\n            TEST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/constants/index.ts\n            \n            variable\n            USER_REPOSITORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/database/database.config.ts\n            \n            variable\n            databaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/database/dbConfig.interface.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/database/dbConfig.interface.ts\n            \n            interface\n            DatabaseConfigAttributes\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/pipes/validate.pipe.ts\n            \n            injectable\n            ValidateInputPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/custom-logger/custom-logger.service.ts\n            \n            injectable\n            CustomLogger\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/image-upload/entities/image.entity.ts\n            \n            class\n            Image\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/image-upload/image-upload.controller.ts\n            \n            controller\n            ImageUploadController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/modules/image-upload/image-upload.service.ts\n            \n            injectable\n            ImageUploadService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/repl.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utility/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utility/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utility/sms.service.ts\n            \n            injectable\n            SmsService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/sequelize : ^10.0.1\n        \n            @nestjs/swagger : ^7.1.14\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/hapi__joi : ^17.1.14\n        \n            aws-sdk : ^2.1691.0\n        \n            axios : ^1.6.8\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cloudinary : ^2.4.0\n        \n            dotenv : ^16.4.5\n        \n            mysql2 : ^3.9.3\n        \n            nodemailer : ^6.9.13\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.5\n        \n            pg-hstore : ^2.3.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            sequelize : ^6.37.3\n        \n            sequelize-typescript : ^2.1.6\n        \n            sharp : ^0.33.5\n        \n            sqlite : ^5.1.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : MODERATOR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ImageUploadModule\n\n\n\ncluster_ImageUploadModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nImageUploadModule\n\nImageUploadModule\n\nAppModule -->\n\nImageUploadModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nImageUploadService\n\nImageUploadService\n\nImageUploadModule -->\n\nImageUploadService->ImageUploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : Oladimeji Ajeniya\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseConfig   (src/.../database.config.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            DEVELOPMENT   (src/.../index.ts)\n                        \n                        \n                            NEWS_REPOSITORY   (src/.../index.ts)\n                        \n                        \n                            PRODUCTION   (src/.../index.ts)\n                        \n                        \n                            SEQUELIZE   (src/.../index.ts)\n                        \n                        \n                            TEST   (src/.../index.ts)\n                        \n                        \n                            USER_REPOSITORY   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/database/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DatabaseConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    dev: {\n        username: process.env.DB_USER,\n        password: process.env.DB_PASS,\n        database: process.env.DB_NAME_DEVELOPMENT,\n        host: process.env.DB_HOST,\n        port: process.env.DB_PORT,\n        dialect: process.env.DB_DIALECT,\n    },\n    test: {\n        username: process.env.DB_USER,\n        password: process.env.DB_PASS,\n        database: process.env.DB_NAME_TEST,\n        host: process.env.DB_HOST,\n        port: process.env.DB_PORT,\n        dialect: process.env.DB_DIALECT,\n    },\n    production: {\n        username: process.env.DB_USER,\n        password: process.env.DB_PASS,\n        database: process.env.DB_NAME_PRODUCTION,\n        host: process.env.DB_HOST,\n        port: process.env.DB_PORT,\n        dialect: process.env.DB_DIALECT,\n    },\n}\n                    \n                \n\n\n        \n    \n\n    src/core/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n    provide: SEQUELIZE,\n    useFactory: async () => {\n        let config;\n        switch (process.env.NODE_ENV) {\n        case DEVELOPMENT:\n           config = databaseConfig.dev;\n           break;\n        case TEST:\n           config = databaseConfig.test;\n           break;\n        case PRODUCTION:\n           config = databaseConfig.production;\n           break;\n        default:\n           config = databaseConfig.dev;\n        }\n        const sequelize = new Sequelize(config);\n      //   sequelize.addModels([User]);\n        await sequelize.sync();\n        return sequelize;\n    },\n}]\n                    \n                \n\n\n        \n    \n\n    src/core/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEVELOPMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'development'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NEWS_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NEWS_REPOSITORY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRODUCTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'production'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEQUELIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SEQUELIZE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'test'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REPOSITORY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_REPOSITORY'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
